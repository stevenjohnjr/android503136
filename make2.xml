<?xml version="1.0" encoding="UTF-8"?>
<project name="make2" default="all">
  
  
  <property file="make2.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.android_2.2_platform" value="${jdk.home.android_2.2_platform}/../../../Program Files (x86)/Java/jdk1.6.0_30/bin"/>
  <path id="jdk.classpath.android_2.2_platform">
    <fileset dir="${jdk.home.android_2.2_platform}">
      <include name="platforms/android-8/android.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.android_2.2_platform}"/>
  <property name="project.jdk.bin" value="${jdk.bin.android_2.2_platform}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.android_2.2_platform"/>
  
  
  <!-- Project Libraries -->
  
  
  <!-- Global Libraries -->
  
  
  <!-- Application Server Libraries -->
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm.jar"/>
    <pathelement location="${javac2.home}/asm-commons.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module Make2 -->
  
  <dirname property="module.make2.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.make2" value="${jdk.home.android_2.2_platform}"/>
  <property name="module.jdk.bin.make2" value="${jdk.bin.android_2.2_platform}"/>
  <property name="module.jdk.classpath.make2" value="jdk.classpath.android_2.2_platform"/>
  
  <property name="compiler.args.make2" value="${compiler.args}"/>
  
  <property name="make2.output.dir" value="${module.make2.basedir}/bin/classes"/>
  <property name="make2.testoutput.dir" value="${module.make2.basedir}/bin/classes"/>
  
  <path id="make2.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="make2.module.production.classpath">
    <path refid="${module.jdk.classpath.make2}"/>
  </path>
  
  <path id="make2.runtime.production.module.classpath">
    <pathelement location="${make2.output.dir}"/>
  </path>
  
  <path id="make2.module.classpath">
    <path refid="${module.jdk.classpath.make2}"/>
    <pathelement location="${make2.output.dir}"/>
  </path>
  
  <path id="make2.runtime.module.classpath">
    <pathelement location="${make2.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.make2">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.make2">
    <patternset refid="excluded.from.module.make2"/>
  </patternset>
  
  <path id="make2.module.sourcepath">
    <dirset dir="${module.make2.basedir}">
      <include name="src"/>
      <include name="gen"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.make2" depends="compile.module.make2.production,compile.module.make2.tests" description="Compile module Make2"/>
  
  <target name="compile.module.make2.production" depends="register.custom.compilers" description="Compile module Make2; production classes">
    <mkdir dir="${make2.output.dir}"/>
    <javac2 destdir="${make2.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.make2}/javac">
      <compilerarg line="${compiler.args.make2}"/>
      <bootclasspath refid="make2.module.bootclasspath"/>
      <classpath refid="make2.module.production.classpath"/>
      <src refid="make2.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.make2"/>
    </javac2>
    
    <copy todir="${make2.output.dir}">
      <fileset dir="${module.make2.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.make2.basedir}/gen">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.make2.tests" depends="register.custom.compilers,compile.module.make2.production" description="compile module Make2; test classes" unless="skip.tests"/>
  
  <target name="clean.module.make2" description="cleanup module">
    <delete dir="${make2.output.dir}"/>
    <delete dir="${make2.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.make2, clean.artifact.make2:ear_exploded, clean.artifact.make2:war_exploded" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.make2" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.make2:ear_exploded" value="${basedir}/classes/artifacts/Make2_ear_exploded"/>
    <property name="artifact.output.make2:war_exploded" value="${basedir}/classes/artifacts/Make2_war_exploded"/>
    <mkdir dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="clean.artifact.make2:ear_exploded" description="clean Make2:ear exploded artifact output">
    <delete dir="${artifact.output.make2:ear_exploded}"/>
  </target>
  
  <target name="clean.artifact.make2:war_exploded" description="clean Make2:war exploded artifact output">
    <delete dir="${artifact.output.make2:war_exploded}"/>
  </target>
  
  <target name="artifact.make2:ear_exploded" depends="init.artifacts, artifact.make2:war_exploded" description="Build &#39;Make2:ear exploded&#39; artifact">
    <mkdir dir="${artifact.output.make2:ear_exploded}"/>
    <mkdir dir="${artifact.output.make2:ear_exploded}/META-INF"/>
    <copy file="${basedir}/META-INF/application.xml" tofile="${artifact.output.make2:ear_exploded}/META-INF/application.xml"/>
    <mkdir dir="${artifact.output.make2:ear_exploded}/web.war"/>
    <copy todir="${artifact.output.make2:ear_exploded}/web.war">
      <fileset dir="${artifact.output.make2:war_exploded}"/>
    </copy>
  </target>
  
  <target name="artifact.make2:war_exploded" depends="init.artifacts, compile.module.make2" description="Build &#39;Make2:war exploded&#39; artifact">
    <mkdir dir="${artifact.output.make2:war_exploded}"/>
    <copy todir="${artifact.output.make2:war_exploded}">
      <fileset dir="${basedir}/web"/>
    </copy>
    <mkdir dir="${artifact.output.make2:war_exploded}/WEB-INF"/>
    <copy file="${basedir}/web/WEB-INF/web.xml" tofile="${artifact.output.make2:war_exploded}/WEB-INF/web.xml"/>
    <mkdir dir="${artifact.output.make2:war_exploded}/WEB-INF"/>
    <mkdir dir="${artifact.output.make2:war_exploded}/WEB-INF/classes"/>
    <copy todir="${artifact.output.make2:war_exploded}/WEB-INF/classes">
      <fileset dir="${make2.output.dir}"/>
    </copy>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.make2:ear_exploded, artifact.make2:war_exploded" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>